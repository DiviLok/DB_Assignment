// <auto-generated />
using DB_Assignment.model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBAssignment.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20221124175420_AddUpdatePatientDetails")]
    partial class AddUpdatePatientDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB_Assignment.model.Authentication", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("authentications");
                });

            modelBuilder.Entity("DB_Assignment.model.Care_Giver", b =>
                {
                    b.Property<int>("care_giverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("care_giverID"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<bool>("driving_license")
                        .HasColumnType("bit");

                    b.Property<string>("email_id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone_number")
                        .HasColumnType("int");

                    b.Property<string>("shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("care_giverID");

                    b.ToTable("care_givers");
                });

            modelBuilder.Entity("DB_Assignment.model.Senior_Citizen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("care_giverID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("needs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phone_number")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("care_giverID");

                    b.ToTable("patient_details");
                });

            modelBuilder.Entity("DB_Assignment.model.ServicesByCity", b =>
                {
                    b.Property<int>("serviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("serviceID"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("service_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("serviceID");

                    b.ToTable("services_by_city");
                });

            modelBuilder.Entity("DB_Assignment.model.Senior_Citizen", b =>
                {
                    b.HasOne("DB_Assignment.model.Care_Giver", "care_givers")
                        .WithMany("elders_under_care")
                        .HasForeignKey("care_giverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("care_givers");
                });

            modelBuilder.Entity("DB_Assignment.model.Care_Giver", b =>
                {
                    b.Navigation("elders_under_care");
                });
#pragma warning restore 612, 618
        }
    }
}
